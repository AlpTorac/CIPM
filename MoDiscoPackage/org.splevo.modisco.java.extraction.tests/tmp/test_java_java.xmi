<?xml version="1.0" encoding="ASCII"?>
<java:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" name="org.splevo.tests.unresolved.a">
  <ownedElements name="org">
    <ownedPackages name="splevo">
      <ownedPackages name="tests">
        <ownedPackages name="unresolved">
          <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.1" name="CallingUnresolved">
            <modifier visibility="public"/>
            <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="testMethod">
              <modifier visibility="public"/>
              <body originalCompilationUnit="//@compilationUnits.1">
                <statements xsi:type="java:LabeledStatement" originalCompilationUnit="//@compilationUnits.1" name="outside">
                  <body xsi:type="java:ForStatement" originalCompilationUnit="//@compilationUnits.1">
                    <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="&lt;">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="10"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@initializers.0/@fragments.0"/>
                    </expression>
                    <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.1">
                      <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@initializers.0/@fragments.0"/>
                    </updaters>
                    <initializers xsi:type="java:VariableDeclarationExpression" originalCompilationUnit="//@compilationUnits.1">
                      <type type="//@orphanTypes.0"/>
                      <fragments originalCompilationUnit="//@compilationUnits.1" name="i" usageInVariableAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@expression/@leftOperand //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@updaters.0/@operand //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.0/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@rightOperand">
                        <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="0"/>
                      </fragments>
                      <modifier/>
                    </initializers>
                    <body xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
                      <statements xsi:type="java:ForStatement" originalCompilationUnit="//@compilationUnits.1">
                        <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="&lt;">
                          <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="10"/>
                          <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@initializers.0/@fragments.0"/>
                        </expression>
                        <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.1">
                          <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@initializers.0/@fragments.0"/>
                        </updaters>
                        <initializers xsi:type="java:VariableDeclarationExpression" originalCompilationUnit="//@compilationUnits.1">
                          <type type="//@orphanTypes.0"/>
                          <fragments originalCompilationUnit="//@compilationUnits.1" name="j" usageInVariableAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@updaters.0/@operand //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@extendedOperands.1">
                            <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="0"/>
                          </fragments>
                          <modifier/>
                        </initializers>
                        <body xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
                          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.1">
                            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="==">
                              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="0"/>
                              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="%">
                                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="3"/>
                                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@initializers.0/@fragments.0"/>
                              </leftOperand>
                            </expression>
                            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
                              <statements xsi:type="java:ContinueStatement" originalCompilationUnit="//@compilationUnits.1" label="//@unresolvedItems.0"/>
                            </thenStatement>
                          </statements>
                          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@initializers.0/@fragments.0"/>
                                <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.1" escapedValue="&quot;i: &quot;"/>
                                <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.1" escapedValue="&quot;|j: &quot;"/>
                                <extendedOperands xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@initializers.0/@fragments.0"/>
                              </arguments>
                              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@fragments.0">
                                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
                              </expression>
                            </expression>
                          </statements>
                        </body>
                      </statements>
                    </body>
                  </body>
                </statements>
              </body>
              <returnType type="//@orphanTypes.5"/>
            </bodyDeclarations>
          </ownedElements>
        </ownedPackages>
      </ownedPackages>
    </ownedPackages>
  </ownedElements>
  <ownedElements name="java" proxy="true">
    <ownedPackages name="lang" proxy="true">
      <ownedElements xsi:type="java:ClassDeclaration" name="System" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.1/@expression/@expression/@qualifier">
        <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
          <fragments name="out" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.1/@expression/@expression"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="String" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0/@parameters.0/@type">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedElements.2"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Comparable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.1">
        <typeParameters name="T" proxy="true"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="CharSequence" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.2"/>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Appendable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superInterfaces.0"/>
    </ownedPackages>
    <ownedPackages name="io" proxy="true">
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Serializable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.0"/>
      <ownedElements xsi:type="java:ClassDeclaration" name="PrintStream" proxy="true">
        <bodyDeclarations xsi:type="java:MethodDeclaration" name="println" proxy="true" usages="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.1/@expression">
          <parameters name="arg0" proxy="true">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
          </parameters>
        </bodyDeclarations>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.4"/>
        <superClass type="//@ownedElements.1/@ownedPackages.1/@ownedElements.2"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="FilterOutputStream" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superClass">
        <superClass type="//@ownedElements.1/@ownedPackages.1/@ownedElements.3"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="OutputStream" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.2/@superClass">
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.4"/>
        <superInterfaces type="//@ownedElements.1/@ownedPackages.1/@ownedElements.5"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Closeable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.3/@superInterfaces.0 //@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superInterfaces.1"/>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Flushable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.1/@ownedElements.3/@superInterfaces.1"/>
    </ownedPackages>
  </ownedElements>
  <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@initializers.0/@type //@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@initializers.0/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
  <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
  <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
  <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
  <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
  <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
  <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
  <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
  <unresolvedItems xsi:type="java:UnresolvedLabeledStatement" name="outside" proxy="true" usagesInContinueStatements="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@body/@body/@statements.0/@body/@statements.0/@thenStatement/@statements.0"/>
  <compilationUnits name="package-info.java" originalFilePath="D:\Projekte\phd\Development\eclipse\junit-workspace\org.splevo.tests.unresolved.a\src\org\splevo\tests\unresolved\package-info.java" commentList="//@compilationUnits.0/@comments.0" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0">
    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@compilationUnits.0" content="/** &#xA; * Test code for diffing unresolved elements.&#xA; * @author Benjamin Klatt&#xA; */&#xA;" enclosedByParent="true"/>
  </compilationUnits>
  <compilationUnits name="CallingUnresolved.java" originalFilePath="D:\Projekte\phd\Development\eclipse\junit-workspace\org.splevo.tests.unresolved.a\src\org\splevo\tests\unresolved\CallingUnresolved.java" package="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0" types="//@ownedElements.0/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
</java:Model>
